
---

## ðŸ“„ docs/design.md

```markdown
# Design

Users create encrypted DCA intents in the browser (budget, frequency, timeframe). Intents are encrypted client-side with FHE and sent to the backend aggregator. The backend batches intents (default: 10 per batch), aggregates them homomorphically, decrypts only the total, and executes a single swap (USDCâ†’ETH) on-chain. Distribution is proportional.

### Components
- **Frontend**: React UI (out of scope for demo).
- **Backend**: Node.js aggregator (backend/src).
- **FHE worker**: placeholder with encrypt/aggregate/decrypt functions.
- **Contract**: BatchRouter.sol to accept swap & distribute tokens.

### Flow
1. Users send encrypted intents to backend.
2. Backend queues until 10 intents are collected.
3. Aggregation: ciphertexts â†’ encrypted_total â†’ decrypted_total.
4. On-chain swap via BatchRouter.
5. Distribution back to users.

### Notes
- Only aggregated amount revealed on-chain.
- Default batch size = 10.
- Future: integrate Threshold FHE for trust minimization.
